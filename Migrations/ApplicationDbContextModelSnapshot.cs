// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TisCircuitsAPI.Models;

#nullable disable

namespace TisCircuitsAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TisCircuitsAPI.Models.AccesFormation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Id_formation")
                        .HasColumnType("int");

                    b.Property<int?>("Id_service")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_formation");

                    b.HasIndex("Id_service");

                    b.ToTable("AccesFormation");
                });

            modelBuilder.Entity("TisCircuitsAPI.Models.Demande", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateOnly>("datecreation")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("daterecu")
                        .HasColumnType("date");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("id_fichier")
                        .HasColumnType("int");

                    b.Property<string>("matricule")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("matriculerecu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id")
                        .HasName("PK__Demande__3213E83F4DF6353E");

                    b.HasIndex("id_fichier");

                    b.ToTable("Demande");
                });

            modelBuilder.Entity("TisCircuitsAPI.Models.DemandeConge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("DemandeConges");
                });

            modelBuilder.Entity("TisCircuitsAPI.Models.DemandeEmp", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("DemandeEmp");
                });

            modelBuilder.Entity("TisCircuitsAPI.Models.Details", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("FormationId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("date")
                        .HasColumnType("date");

                    b.Property<string>("description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.HasIndex("FormationId");

                    b.ToTable("Details");
                });

            modelBuilder.Entity("TisCircuitsAPI.Models.Formation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateOnly>("date_creation")
                        .HasColumnType("date");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("etat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("titre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("Formation");
                });

            modelBuilder.Entity("TisCircuitsAPI.Models.Fourniture", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("MatiereId")
                        .HasColumnType("int");

                    b.Property<int?>("TypeFournitureId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("date_creation")
                        .HasColumnType("date");

                    b.Property<string>("description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("etats")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("matricule_demandeur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("quantite")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.HasIndex("MatiereId");

                    b.HasIndex("TypeFournitureId");

                    b.ToTable("Fourniture");
                });

            modelBuilder.Entity("TisCircuitsAPI.Models.Matiere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateAjout")
                        .HasColumnType("date");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Matiere");
                });

            modelBuilder.Entity("TisCircuitsAPI.Models.Role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("TisCircuitsAPI.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("TisCircuitsAPI.Models.Type_Fourniture", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("qte")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("Type_Fourniture");
                });

            modelBuilder.Entity("TisCircuitsAPI.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("Etats")
                        .HasColumnType("int");

                    b.Property<int?>("Id_Service")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("fonction")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("matricule")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("matriculeWindows")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("nom_complet")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("responsable")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("role_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Id_Service");

                    b.HasIndex("role_id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("TisCircuitsAPI.Models.AccesFormation", b =>
                {
                    b.HasOne("TisCircuitsAPI.Models.Formation", "Id_formationNavigation")
                        .WithMany("AccesFormation")
                        .HasForeignKey("Id_formation")
                        .HasConstraintName("FK_AccesFormation_Formation");

                    b.HasOne("TisCircuitsAPI.Models.Service", "Id_serviceNavigation")
                        .WithMany("AccesFormation")
                        .HasForeignKey("Id_service")
                        .HasConstraintName("FK_AccesFormation_Service");

                    b.Navigation("Id_formationNavigation");

                    b.Navigation("Id_serviceNavigation");
                });

            modelBuilder.Entity("TisCircuitsAPI.Models.Demande", b =>
                {
                    b.HasOne("TisCircuitsAPI.Models.DemandeEmp", "id_fichierNavigation")
                        .WithMany("Demande")
                        .HasForeignKey("id_fichier")
                        .HasConstraintName("FK__Demande__id_fich__60A75C0F");

                    b.Navigation("id_fichierNavigation");
                });

            modelBuilder.Entity("TisCircuitsAPI.Models.DemandeConge", b =>
                {
                    b.HasOne("TisCircuitsAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TisCircuitsAPI.Models.Details", b =>
                {
                    b.HasOne("TisCircuitsAPI.Models.Formation", "Formation")
                        .WithMany("Details")
                        .HasForeignKey("FormationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Formation");
                });

            modelBuilder.Entity("TisCircuitsAPI.Models.Fourniture", b =>
                {
                    b.HasOne("TisCircuitsAPI.Models.Matiere", "Matiere")
                        .WithMany()
                        .HasForeignKey("MatiereId")
                        .HasConstraintName("FK_Fourniture_Matiere");

                    b.HasOne("TisCircuitsAPI.Models.Type_Fourniture", "Type_Fourniture")
                        .WithMany("Fournitures")
                        .HasForeignKey("TypeFournitureId");

                    b.Navigation("Matiere");

                    b.Navigation("Type_Fourniture");
                });

            modelBuilder.Entity("TisCircuitsAPI.Models.User", b =>
                {
                    b.HasOne("TisCircuitsAPI.Models.Service", "Id_ServiceNavigation")
                        .WithMany("User")
                        .HasForeignKey("Id_Service");

                    b.HasOne("TisCircuitsAPI.Models.Role", "role")
                        .WithMany("User")
                        .HasForeignKey("role_id");

                    b.Navigation("Id_ServiceNavigation");

                    b.Navigation("role");
                });

            modelBuilder.Entity("TisCircuitsAPI.Models.DemandeEmp", b =>
                {
                    b.Navigation("Demande");
                });

            modelBuilder.Entity("TisCircuitsAPI.Models.Formation", b =>
                {
                    b.Navigation("AccesFormation");

                    b.Navigation("Details");
                });

            modelBuilder.Entity("TisCircuitsAPI.Models.Role", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("TisCircuitsAPI.Models.Service", b =>
                {
                    b.Navigation("AccesFormation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TisCircuitsAPI.Models.Type_Fourniture", b =>
                {
                    b.Navigation("Fournitures");
                });
#pragma warning restore 612, 618
        }
    }
}
